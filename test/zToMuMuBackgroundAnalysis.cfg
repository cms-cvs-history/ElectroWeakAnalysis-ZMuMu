process ZToMuMuBackgroundAnalysis = {

  include "FWCore/MessageLogger/data/MessageLogger.cfi"

  untracked PSet options = {
    untracked bool wantSummary = true
  }

  source = PoolSource {
    untracked vstring fileNames = {
      "file:dimuons.root"
    }
  }

  untracked PSet maxEvents = {
    untracked int32 input = -1
  }

  service = TFileService { 
    string fileName ="zToMuMuBackgroundAnalysis.root"
  }

  block zSelection = {
    string cut = "daughter(0).pt > 20 & daughter(1).pt > 20 & abs(daughter(0).eta)<2 & abs(daughter(1).eta)<2 & mass > 20"	
  }
 
  module goodZToMuMu = CandViewRefSelector {
    InputTag src = dimuonsGlobal
    using zSelection
    bool filter = true
  }

  module zToMuMuOneTrack = CandViewRefSelector {
    InputTag src = dimuonsOneTrack
    using zSelection
    bool filter = true
  }

  module zToMuMuOneStandAloneMuon = CandViewRefSelector {
    InputTag src = dimuonsOneStandAloneMuon
    using zSelection
    bool filter = true
  }

  module goodZToMuMuOneTrack = ZMuMuOverlapExclusionSelector {  
    InputTag src = zToMuMuOneTrack
    InputTag overlap = goodZToMuMu
    bool filter = true
  }

  module goodZToMuMuOneStandAloneMuon = ZMuMuOverlapExclusionSelector { 
    InputTag src = zToMuMuOneStandAloneMuon
    InputTag overlap = goodZToMuMu
    bool filter = true
  }

  block bin0CutTwoDaughters = {
    string cut = "0 < daughter(0).eta < 0.5 | 0 < daughter(1).eta < 0.5"
  }

  block bin1CutTwoDaughters = {
    string cut = "0.5 < daughter(0).eta < 1 | 0.5 < daughter(1).eta < 1"
  }

  block bin0CutOneDaughter = {
    string cut = "0 < daughter(1).eta < 0.5"
  }

  block bin1CutOneDaughter = {
    string cut = "0.5 < daughter(1).eta < 1"
  }

  module goodZToMuMuBin0 = CandViewRefSelector {
    InputTag src = goodZToMuMu
    using bin0CutTwoDaughters
    bool filter = true
  }

  module goodZToMuMuBin1 = CandViewRefSelector {
    InputTag src = goodZToMuMu
    using bin1CutTwoDaughters
    bool filter = true
  }

  module goodZToMuMuOneStandAloneMuonBin0 = CandViewRefSelector {
    InputTag src = goodZToMuMuOneStandAloneMuon
    using bin0CutOneDaughter
    bool filter = true
  }

  module goodZToMuMuOneStandAloneMuonBin1 = CandViewRefSelector {
    InputTag src = goodZToMuMuOneStandAloneMuon
    using bin1CutOneDaughter
    bool filter = true
  }

  module goodZToMuMuOneTrackBin0 = CandViewRefSelector {
    InputTag src = goodZToMuMuOneTrack
    using bin0CutOneDaughter
    bool filter = true
  }

  module goodZToMuMuOneTrackBin1 = CandViewRefSelector {
    InputTag src = goodZToMuMuOneTrack
    using bin1CutOneDaughter
    bool filter = true
  }

  block zPlots = {
    VPSet histograms = {
      {
        untracked double min  =   0.0
        untracked double max  = 200.0 
        untracked int32 nbins = 200
        untracked string name = "zMass"
        untracked string description  = "Z mass [GeV/c^{2}]"
        untracked string plotquantity = "mass"
      },
      {
        untracked double min  =   0.0
        untracked double max  = 200.0 
        untracked int32 nbins = 200
        untracked string name = "mu1Pt"
        untracked string description  = "Highest muon p_{t} [GeV/c]"
        untracked string plotquantity = "max(daughter(0).pt,daughter(1).pt)"
      },
      {
        untracked double min  =   0.0
        untracked double max  = 200.0 
        untracked int32 nbins = 200
        untracked string name = "mu2Pt"
        untracked string description  = "Lowest muon p_{t} [GeV/c]"
        untracked string plotquantity = "min(daughter(0).pt,daughter(1).pt)"
      }
    }
  }

  module goodZToMuMuPlots = CandViewHistoAnalyzer {
    InputTag src = goodZToMuMu
    using zPlots
  }

  module goodZToMuMuOneTrackPlots = CandViewHistoAnalyzer {
    InputTag src = goodZToMuMuOneTrack
    using zPlots
  }

  module goodZToMuMuOneStandAloneMuonPlots = CandViewHistoAnalyzer {
    InputTag src = goodZToMuMuOneStandAloneMuon
    using zPlots
  }

  module eventInfo = AsciiOutputModule { 
#     untracked uint32 prescale = 1000
  }

  module goodZToMuMuPlotsBin0 = CandViewHistoAnalyzer {
    InputTag src = goodZToMuMuBin0
    using zPlots
  }

  module goodZToMuMuPlotsBin1 = CandViewHistoAnalyzer {
    InputTag src = goodZToMuMuBin1
    using zPlots
  }

  module goodZToMuMuOneStandAloneMuonPlotsBin0 = CandViewHistoAnalyzer {
    InputTag src = goodZToMuMuOneStandAloneMuonBin0
    using zPlots
  }

  module goodZToMuMuOneStandAloneMuonPlotsBin1 = CandViewHistoAnalyzer {
    InputTag src = goodZToMuMuOneStandAloneMuonBin1
    using zPlots
  }

  module goodZToMuMuOneTrackPlotsBin0 = CandViewHistoAnalyzer {
    InputTag src = goodZToMuMuOneTrackBin0
    using zPlots
  }

  module goodZToMuMuOneTrackPlotsBin1 = CandViewHistoAnalyzer {
    InputTag src = goodZToMuMuOneTrackBin1
    using zPlots
  }

  path zToMuMuPath = {  
    goodZToMuMu, 
    goodZToMuMuPlots,
    goodZToMuMuBin0, goodZToMuMuPlotsBin0, 
    goodZToMuMuBin1, goodZToMuMuPlotsBin1 
  }

  path zToMuMuOneStandAloneMuonPath = {
    !goodZToMuMu, 
    zToMuMuOneStandAloneMuon, 
    goodZToMuMuOneStandAloneMuon,
    goodZToMuMuOneStandAloneMuonPlots,
    goodZToMuMuOneStandAloneMuonBin0, goodZToMuMuOneStandAloneMuonPlotsBin0,
    goodZToMuMuOneStandAloneMuonBin1, goodZToMuMuOneStandAloneMuonPlotsBin1 
  }

  path zToMuMuOneTrackPath = {
    !goodZToMuMu,
    !zToMuMuOneStandAloneMuon,
    zToMuMuOneTrack,
    goodZToMuMuOneTrack,
    goodZToMuMuOneTrackPlots,
    goodZToMuMuOneTrackBin0, goodZToMuMuOneTrackPlotsBin0, 
    goodZToMuMuOneTrackBin1, goodZToMuMuOneTrackPlotsBin1  
  }
  
  endpath endPath = { 
    eventInfo 
  }
}
